<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
<!ENTITY name      "ca.docker.autostart">
<!ENTITY author    "Andrew Zawadzki">
<!ENTITY version   "2016.11.25">
<!ENTITY md5       "efe5f38d2fe0930b461e92b593cca9c0">
<!ENTITY launch    "Settings/Docker.autostart">
<!ENTITY plugdir   "/usr/local/emhttp/plugins/&name;">
<!ENTITY github    "Squidly271/ca.docker.autostart">
<!ENTITY pluginURL "https://raw.githubusercontent.com/&github;/master/plugins/&name;.plg">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;">

<CHANGES>
###2016.11.25
- Changes so that unRaid webUI is available prior to all of the containers being started (useful in case of long delays set)

###2016.11.20
- CSS Changes for readability

###2016.11.13
- Initial Release

</CHANGES>

<!-- The 'pre-install' script. -->
<FILE Run="/usr/bin/php">
<INLINE>
<![CDATA[
<?
  $version = parse_ini_file("/etc/unraid-version");
  
  if ( version_compare($version['version'],"6.3.0-rc2", "<") )
  {
    echo "*******************************************************************************\n";
    echo "\n";
    echo "CA Docker Autostart Manager Requires unRaid version 6.3.0-rc2 or greater to run\n";
    echo "\n";
    echo "********************************************************************************\n";
    exit(1);
  }
?>
]]>
</INLINE>
</FILE>

<FILE Run="/bin/bash">
<INLINE>
# Remove old 'source' files
rm -f $(ls /boot/config/plugins/&name;/&name;*.txz 2>/dev/null|grep -v '&version;')
</INLINE>
</FILE>

<!--
The 'source' file.
-->
<FILE Name="/boot/config/plugins/&name;/&name;-&version;-x86_64-1.txz" Run="upgradepkg --install-new">
<URL>https://raw.github.com/&github;/master/archive/&name;-&version;-x86_64-1.txz</URL>
<MD5>&md5;</MD5>
</FILE>

<!--
The 'post-install' script
-->
<FILE Run="/bin/bash">
<INLINE>
mkdir -p /tmp/ca.docker.autostart
echo ""
echo "----------------------------------------------------"
echo " &name; has been installed."
echo " Copyright 2015-2016, Andrew Zawadzki"
echo " Version: &version;"
echo "----------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
removepkg &name;-&version;-x86_64-1
rm -rf &plugdir;
rm -rf /boot/config/plugins/&name;
</INLINE>
</FILE> 
</PLUGIN>
